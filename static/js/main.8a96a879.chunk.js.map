{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","_options","fetch","baseURL","headers","then","res","ok","json","Promise","reject","status","values","method","body","JSON","stringify","name","about","avatar","link","cardId","value","authorization","Card","props","handleClick","onCardClick","card","key","i","style","backgroundImage","onClick","likes","length","React","Component","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserData","catch","err","console","log","getInitialCards","UserData","InitialCards","onEditAvatar","type","aria-label","onEditProfile","onAddPlace","map","element","document","querySelector","Footer","PopupWithForm","isOpen","action","noValidate","onClose","title","children","buttonText","ImagePopup","undefined","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","defaultValue","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8a96a879.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/logo.svg\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Место\" />\n    </header>\n  );\n}\n","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  getUserData() {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      headers: this._options.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._options.baseURL}/cards`, {\n      headers: this._options.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .then((res) => {\n        return res;\n      });\n  }\n\n  setProfileData(values) {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values[\"username\"],\n        about: values[\"text\"],\n        avatar: values[\"avatar\"],\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  sendNewCard(values) {\n    return fetch(`${this._options.baseURL}/cards`, {\n      method: \"POST\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values[\"name\"],\n        link: values[\"link\"],\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  likeButton(cardId) {\n    return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._options.headers,\n    });\n  }\n\n  dislikeButton(cardId) {\n    return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._options.headers,\n    });\n  }\n\n  setProfileImage(value) {\n    return fetch(`${this._options.baseURL}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        avatar: value,\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._options.baseURL}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._options.headers,\n    });\n  }\n}\n\n\nconst api = new Api({\n  baseURL: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"57c05f36-a8d9-486d-bc00-4738c3850df5\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;","import React from \"react\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = () => {\n    this.props.onCardClick(this.props.card);\n}\n\n  render() {\n    return (\n      <div className=\"element\" key={this.props.i}>\n        <div\n          className=\"element__image\"\n          style={{ backgroundImage: `url(${this.props.card.link})` }}\n          onClick={this.handleClick}\n        ></div>\n        <button className=\"element__delete\"></button>\n        <div className=\"element__container\">\n          <p className=\"element__caption\">{this.props.card.name}</p>\n          <div className=\"element__like-container\">\n            <button className=\"element__like\"></button>\n            <p className=\"element__like-counter\">\n              {this.props.card.likes.length}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport api from \"../utils/api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState(\"\");\n  const [userDescription, setUserDescription] = React.useState(\"\");\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserData().catch((err) => console.log(err)),\n      api.getInitialCards().catch((err) => console.log(err)),\n    ]).then(([UserData, InitialCards]) => {\n      setUserName(UserData.name);\n      setUserDescription(UserData.about);\n      setUserAvatar(UserData.avatar);\n      setCards(InitialCards);\n    });\n  });\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__picture-container\">\n          <div\n            className=\"profile__picture\"\n            style={{ backgroundImage: `url(${userAvatar})` }}\n            alt=\"Профиль\"\n            onClick={props.onEditAvatar}\n          ></div>\n        </div>\n        <div className=\"profile__container\">\n          <div className=\"profile__info\">\n            <div className=\"profile__info-container\">\n              <h1 className=\"profile__title\">{userName}</h1>\n              <button\n                className=\"profile__edit-button\"\n                type=\"button\"\n                aria-label=\"Редактировать\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__text\">{userDescription}</p>\n          </div>\n          <button\n            className=\"profile__add-button\"\n            type=\"button\"\n            onClick={props.onAddPlace}\n          ></button>\n        </div>\n      </section>\n      <section className=\"elements\">\n        {cards.map(\n          (element, i) => (\n            <Card card={element} key={i} onCardClick={props.onCardClick} />\n          ),\n          document.querySelector(\".elements\")\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <form\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_opened\" : \"\"\n      }`}\n      name={`popup_type_${props.name}`}\n      method=\"GET\"\n      action=\"#\"\n      noValidate\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__form-close\"\n          aria-label=\"Закрыть\"\n          onClick={props.onClose}\n        ></button>\n        <div className=\"popup__inputs\">\n          <h2 className=\"popup__form-title\">{props.title}</h2>\n          <fieldset className=\"popup__form\">\n            {props.children}\n            <button type=\"submit\" className=\"popup__form-button\">\n              {props.buttonText}\n            </button>\n          </fieldset>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\nfunction ImagePopup(props) {\n  return (\n    <div\n      className={`popup__fullscreen ${\n        props.card !== undefined ? \"popup_opened\" : \"\"\n      }`}\n    >\n      <div className=\"popup__fullscreen-container\">\n        {props.card !== undefined ? (\n          <img\n            className=\"popup__fullscreen-image\"\n            src={props.card.link}\n            alt={props.card.name}\n          />\n        ) : (\n          <img className=\"popup__fullscreen-image\" src=\"#\" alt=\"#\" />\n        )}\n        <button\n          className=\"popup__fullscreen-close\"\n          onClick={props.onClose}\n        ></button>\n        <p className=\"popup__fullscreen-caption\">\n          {props.card !== undefined ? props.card.name : \"\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport \"../index.css\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [selectedCard, setSelectedCard] = React.useState(undefined);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({ name: card.name, link: card.link });\n  }\n\n  function closeAllPopups() {\n    setSelectedCard(undefined);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n  }\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onEditAvatar={handleEditAvatarClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick}\n      />\n      <PopupWithForm\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        buttonText=\"Сохранить\"\n        children={\n          <>\n            <input\n              id=\"username\"\n              className=\"popup__form-item popup__form-item_el_name\"\n              type=\"text\"\n              name=\"username\"\n              defaultValue=\"\"\n              placeholder=\"\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              required\n            />\n            <span id=\"username-error\" className=\"popup__form-error\"></span>\n            <input\n              id=\"text\"\n              className=\"popup__form-item popup__form-item_el_text\"\n              type=\"text\"\n              name=\"text\"\n              defaultValue=\"\"\n              placeholder=\"\"\n              minLength=\"2\"\n              maxLength=\"200\"\n              required\n            />\n            <span id=\"text-error\" className=\"popup__form-error\"></span>\n          </>\n        }\n      />\n      <PopupWithForm\n        name=\"add-card\"\n        title=\"Новое место\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        buttonText = \"Создать\"\n        children={\n          <>\n            <input\n              id=\"image__title\"\n              className=\"popup__form-item popup__form-item_el_card-title\"\n              type=\"text\"\n              name=\"image__title\"\n              defaultValue=\"\"\n              placeholder=\"Название\"\n              required\n            />\n            <span id=\"image__title-error\" className=\"popup__form-error\"></span>\n            <input\n              id=\"image__link\"\n              className=\"popup__form-item popup__form-item_el_card-image\"\n              type=\"url\"\n              name=\"image__link\"\n              defaultValue=\"\"\n              placeholder=\"Ссылка на картинку\"\n              required\n            />\n            <span id=\"image__link-error\" className=\"popup__form-error\"></span>\n          </>\n        }\n      />\n      <PopupWithForm\n        name=\"profile-image\"\n        title=\"Обновить аватар\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        buttonText = \"Сохранить\"\n        children={\n          <>\n            <input\n              id=\"profile-image\"\n              className=\"popup__form-item popup__form-item_el_profile-image\"\n              type=\"url\"\n              name=\"profile-image\"\n              defaultValue=\"\"\n              placeholder=\"Ссылка на картинку\"\n              required\n            />\n            <span id=\"profile-image-error\" className=\"popup__form-error\"></span>\n          </>\n        }\n      />\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n      )\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}