{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","api","options","handleResponse","res","ok","Promise","reject","status","this","_options","fetch","baseURL","headers","then","json","values","method","body","JSON","stringify","name","about","link","cardId","isLiked","value","avatar","authorization","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","key","style","backgroundImage","onClick","onCardClick","onCardDelete","onCardLike","length","Main","onEditAvatar","type","aria-label","onEditProfile","onAddPlace","cards","map","element","Footer","ImagePopup","undefined","onClose","PopupWithForm","isOpen","action","noValidate","onSubmit","title","children","buttonText","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","defaultValue","ref","AddPlacePopup","onSendCard","cardName","setCardName","cardLink","setCardLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getInitialCards","getUserData","initialCardsRes","userDataRes","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","deleteCard","filter","setProfileData","userdata","sendNewCard","setProfileImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1ade6bf5.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/logo.svg\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Место\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  handleResponse = (res) => {\n    if (res.ok){\n      return res\n    }\n    else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }  \n  }\n\n  getUserData() {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      headers: this._options.headers,\n    }).then((res) => {\n      this.handleResponse(res);\n        return res.json();\n      })\n    }\n\n  getInitialCards() {\n    return fetch(`${this._options.baseURL}/cards`, {\n      headers: this._options.headers,\n    })\n      .then((res) => {\n        this.handleResponse(res);\n        return res.json();\n      })\n  }\n\n  setProfileData(values) {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values.name,\n        about: values.about,\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  sendNewCard(values) {\n    return fetch(`${this._options.baseURL}/cards`, {\n      method: \"POST\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values[\"name\"],\n        link: values[\"link\"],\n      }),\n    }).then((res) => {\n      this.handleResponse(res);\n      return res.json();\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n        method: \"PUT\",\n        headers: this._options.headers,\n      }).then((res) => {\n        return res.json();\n      });\n    } else {\n      return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._options.headers,\n      }).then((res) => {\n        return res.json();\n      });\n    }\n  }\n\n  setProfileImage(value) {\n    return fetch(`${this._options.baseURL}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        avatar : value.avatar,\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._options.baseURL}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._options.headers,\n    }).then((res) => {\n      return res.json();\n    });\n  }\n}\n\nconst baseurl = \"https://mesto.nomoreparties.co/v1/cohort-14\";\nconst header = \"57c05f36-a8d9-486d-bc00-4738c3850df5\";\n\nconst api = new Api({\n  baseURL: baseurl,\n  headers: {\n    authorization: header,\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete ${isOwn ? 'element__delete_visible' : ''}`\n  ); \n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : ''}`; \n\n  function handleClick() {\n    props.onCardClick(props.card);\n  };\n\n  function handleLike() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDelete() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <div className=\"element\" key={props.i}>\n      <div\n        className=\"element__image\"\n        style={{ backgroundImage: `url(${props.card.link})` }}\n        onClick={handleClick}\n      ></div>\n      <button className={cardDeleteButtonClassName} onClick={handleDelete}></button>\n      <div className=\"element__container\">\n        <p className=\"element__caption\">{props.card.name}</p>\n        <div className=\"element__like-container\">\n          <button className={cardLikeButtonClassName} onClick={handleLike}></button>\n          <p className=\"element__like-counter\">\n            {props.card.likes.length}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__picture-container\">\n          <div\n            className=\"profile__picture\"\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\n            alt=\"Профиль\"\n            onClick={props.onEditAvatar}\n          ></div>\n        </div>\n        <div className=\"profile__container\">\n          <div className=\"profile__info\">\n            <div className=\"profile__info-container\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button\n                className=\"profile__edit-button\"\n                type=\"button\"\n                aria-label=\"Редактировать\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__text\">{currentUser.about}</p>\n          </div>\n          <button\n            className=\"profile__add-button\"\n            type=\"button\"\n            onClick={props.onAddPlace}\n          ></button>\n        </div>\n      </section>\n      <section className=\"elements\">\n        {props.cards.map(\n          (element, i) => (\n            <Card\n              card={element}\n              key={i}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete = {props.onCardDelete}\n            />\n          )\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nfunction ImagePopup(props) {\n  return (\n    //Я пока что оставлю шаблонные строки и изучу classnames после дедлайна) Спасибо за рекомендацию!\n    <div\n      className={`popup__fullscreen ${\n        props.card !== undefined ? \"popup_opened\" : \"\"\n      }`}\n    >\n      <div className=\"popup__fullscreen-container\">\n        {props.card !== undefined ? (\n          <img\n            className=\"popup__fullscreen-image\"\n            src={props.card.link}\n            alt={props.card.name}\n          />\n        ) : (\n          <img className=\"popup__fullscreen-image\" src=\"#\" alt=\"#\" />\n        )}\n        <button\n          className=\"popup__fullscreen-close\"\n          onClick={props.onClose}\n        ></button>\n        <p className=\"popup__fullscreen-caption\">\n          {props.card !== undefined ? props.card.name : \"\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <form\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_opened\" : \"\"\n      }`}\n      name={`popup_type_${props.name}`}\n      method=\"GET\"\n      action=\"#\"\n      noValidate\n      onSubmit = {props.onSubmit}\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__form-close\"\n          aria-label=\"Закрыть\"\n          onClick={props.onClose}\n        ></button>\n        <div className=\"popup__inputs\">\n          <h2 className=\"popup__form-title\">{props.title}</h2>\n          <fieldset className=\"popup__form\">\n            {props.children}\n            <button type=\"submit\" className=\"popup__form-button\">\n              {props.buttonText}\n            </button>\n          </fieldset>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport PropTypes from 'prop-types';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name : name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n      children={\n        <>\n          <input\n            id=\"username\"\n            className=\"popup__form-item popup__form-item_el_name\"\n            onChange={handleNameChange}\n            type=\"text\"\n            name=\"username\"\n            value={name || ''}\n            placeholder=\"\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required\n          />\n          <span id=\"username-error\" className=\"popup__form-error\"></span>\n          <input\n            id=\"text\"\n            className=\"popup__form-item popup__form-item_el_text\"\n            onChange={handleDescriptionChange}\n            type=\"text\"\n            name=\"text\"\n            value={description || ''}\n            placeholder=\"\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n          />\n          <span id=\"text-error\" className=\"popup__form-error\"></span>\n        </>\n      }\n    />\n  );\n}\n\nEditProfilePopup.propTypes = {\n  onUpdateUser: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n} \n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport PropTypes from 'prop-types';\n\nfunction EditAvatarPopup({ onUpdateAvatar, isOpen, onClose }) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile-image\"\n      title=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n      children={\n        <>\n          <input\n            id=\"profile-image\"\n            className=\"popup__form-item popup__form-item_el_profile-image\"\n            type=\"url\"\n            name=\"profile-image\"\n            defaultValue=\"\"\n            placeholder=\"Ссылка на картинку\"\n            required\n            ref={avatarRef}\n          />\n          <span id=\"profile-image-error\" className=\"popup__form-error\"></span>\n        </>\n      }\n    />\n  );\n}\n\nEditAvatarPopup.propTypes = {\n  onUpdateAvatar: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n} \n\nexport default EditAvatarPopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport PropTypes from 'prop-types';\n\nfunction AddPlacePopup({isOpen, onClose, onSendCard}) {\n    const [cardName, setCardName] = React.useState('');\n    const [cardLink, setCardLink] = React.useState('');\n\n    function handleNameChange(evt) {\n        setCardName(evt.target.value);\n    }\n\n    function handleLinkChange(evt) {\n        setCardLink(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        onSendCard({\n            name: cardName,\n            link: cardLink,\n        })\n    }\n\n    return(<PopupWithForm\n        name=\"add-card\"\n        title=\"Новое место\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onSubmit={handleSubmit}\n        buttonText=\"Создать\"\n        children={\n          <>\n            <input\n              id=\"image__title\"\n              className=\"popup__form-item popup__form-item_el_card-title\"\n              type=\"text\"\n              name=\"image__title\"\n              value={cardName || ''}\n              placeholder=\"Название\"\n              required\n              onChange={handleNameChange}\n            />\n            <span\n              id=\"image__title-error\"\n              className=\"popup__form-error\"\n            ></span>\n            <input\n              id=\"image__link\"\n              className=\"popup__form-item popup__form-item_el_card-image\"\n              type=\"url\"\n              name=\"image__link\"\n              value={cardLink || ''}\n              placeholder=\"Ссылка на картинку\"\n              required\n              onChange={handleLinkChange}\n            />\n            <span id=\"image__link-error\" className=\"popup__form-error\"></span>\n          </>\n        }\n      />)\n}\n\nAddPlacePopup.propTypes = {\n    onSendCard: PropTypes.func.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n  } \n\nexport default AddPlacePopup;","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport api from \"../utils/api.js\";\nimport \"../index.css\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards(), api.getUserData()])\n      .then(([initialCardsRes, userDataRes]) => {\n        setCards(initialCardsRes);\n        setCurrentUser(userDataRes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((element) =>\n          element._id === card._id ? newCard : element\n        );\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then((card) => {\n        const newCards = cards.filter((element) => element._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({ name: card.name, link: card.link });\n  }\n\n  function handleUpdateUser(values) {\n    api\n      .setProfileData(values)\n      .then((userdata) => {\n        setCurrentUser(userdata);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api\n      .setProfileImage(avatar)\n      .then((res) => {\n        currentUser.avatar = res.avatar;\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlacePopupSubmit(values) {\n    api\n      .sendNewCard(values)\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function closeAllPopups() {\n    setSelectedCard(undefined);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onSendCard={handleAddPlacePopupSubmit}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}