{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","api","options","this","_options","fetch","baseURL","headers","then","res","ok","json","Promise","reject","status","values","method","body","JSON","stringify","name","about","link","cardId","isLiked","value","avatar","authorization","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","key","style","backgroundImage","onClick","onCardClick","onCardDelete","onCardLike","length","Main","onEditAvatar","type","aria-label","onEditProfile","onAddPlace","cards","map","element","document","querySelector","Footer","ImagePopup","undefined","onClose","PopupWithForm","isOpen","action","noValidate","onSubmit","title","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","id","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","defaultValue","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","onSendCard","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialCards","catch","err","console","log","getUserData","userdata","Provider","changeLikeCardStatus","newCard","newCards","deleteCard","filter","setProfileData","sendNewCard","setProfileImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6ca263fc.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/logo.svg\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Место\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;","class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  getUserData() {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      headers: this._options.headers,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._options.baseURL}/cards`, {\n      headers: this._options.headers,\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n      .then((res) => {\n        return res;\n      });\n  }\n\n  setProfileData(values) {\n    return fetch(`${this._options.baseURL}/users/me`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values.name,\n        about: values.about,\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  sendNewCard(values) {\n    return fetch(`${this._options.baseURL}/cards`, {\n      method: \"POST\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: values[\"name\"],\n        link: values[\"link\"],\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n        method: \"PUT\",\n        headers: this._options.headers,\n      }).then((res) => {\n        return res.json();\n      });\n    } else {\n      return fetch(`${this._options.baseURL}/cards/likes/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._options.headers,\n      }).then((res) => {\n        return res.json();\n      });\n    }\n  }\n\n  setProfileImage(value) {\n    return fetch(`${this._options.baseURL}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        avatar : value.avatar,\n      }),\n    }).then((res) => {\n      return res.json();\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._options.baseURL}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._options.headers,\n    }).then((res) => {\n      return res.json();\n    });\n  }\n}\n\nconst baseurl = \"https://mesto.nomoreparties.co/v1/cohort-14\";\nconst header = \"57c05f36-a8d9-486d-bc00-4738c3850df5\";\n\nconst api = new Api({\n  baseURL: baseurl,\n  headers: {\n    authorization: header,\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete ${isOwn ? 'element__delete_visible' : ''}`\n  ); \n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : ''}`; \n\n  function handleClick() {\n    props.onCardClick(props.card);\n  };\n\n  function handleLike() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDelete() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <div className=\"element\" key={props.i}>\n      <div\n        className=\"element__image\"\n        style={{ backgroundImage: `url(${props.card.link})` }}\n        onClick={handleClick}\n      ></div>\n      <button className={cardDeleteButtonClassName} onClick={handleDelete}></button>\n      <div className=\"element__container\">\n        <p className=\"element__caption\">{props.card.name}</p>\n        <div className=\"element__like-container\">\n          <button className={cardLikeButtonClassName} onClick={handleLike}></button>\n          <p className=\"element__like-counter\">\n            {props.card.likes.length}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__picture-container\">\n          <div\n            className=\"profile__picture\"\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\n            alt=\"Профиль\"\n            onClick={props.onEditAvatar}\n          ></div>\n        </div>\n        <div className=\"profile__container\">\n          <div className=\"profile__info\">\n            <div className=\"profile__info-container\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button\n                className=\"profile__edit-button\"\n                type=\"button\"\n                aria-label=\"Редактировать\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__text\">{currentUser.about}</p>\n          </div>\n          <button\n            className=\"profile__add-button\"\n            type=\"button\"\n            onClick={props.onAddPlace}\n          ></button>\n        </div>\n      </section>\n      <section className=\"elements\">\n        {props.cards.map(\n          (element, i) => (\n            <Card\n              card={element}\n              key={i}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete = {props.onCardDelete}\n            />\n          ),\n          document.querySelector(\".elements\")\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nfunction ImagePopup(props) {\n  return (\n    <div\n      className={`popup__fullscreen ${\n        props.card !== undefined ? \"popup_opened\" : \"\"\n      }`}\n    >\n      <div className=\"popup__fullscreen-container\">\n        {props.card !== undefined ? (\n          <img\n            className=\"popup__fullscreen-image\"\n            src={props.card.link}\n            alt={props.card.name}\n          />\n        ) : (\n          <img className=\"popup__fullscreen-image\" src=\"#\" alt=\"#\" />\n        )}\n        <button\n          className=\"popup__fullscreen-close\"\n          onClick={props.onClose}\n        ></button>\n        <p className=\"popup__fullscreen-caption\">\n          {props.card !== undefined ? props.card.name : \"\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\n\nfunction PopupWithForm(props) {\n  return (\n    <form\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_opened\" : \"\"\n      }`}\n      name={`popup_type_${props.name}`}\n      method=\"GET\"\n      action=\"#\"\n      noValidate\n      onSubmit = {props.onSubmit}\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__form-close\"\n          aria-label=\"Закрыть\"\n          onClick={props.onClose}\n        ></button>\n        <div className=\"popup__inputs\">\n          <h2 className=\"popup__form-title\">{props.title}</h2>\n          <fieldset className=\"popup__form\">\n            {props.children}\n            <button type=\"submit\" className=\"popup__form-button\">\n              {props.buttonText}\n            </button>\n          </fieldset>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name : name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n      children={\n        <>\n          <input\n            id=\"username\"\n            className=\"popup__form-item popup__form-item_el_name\"\n            onChange={handleNameChange}\n            type=\"text\"\n            name=\"username\"\n            value={name || ''}\n            placeholder=\"\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required\n          />\n          <span id=\"username-error\" className=\"popup__form-error\"></span>\n          <input\n            id=\"text\"\n            className=\"popup__form-item popup__form-item_el_text\"\n            onChange={handleDescriptionChange}\n            type=\"text\"\n            name=\"text\"\n            value={description || ''}\n            placeholder=\"\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required\n          />\n          <span id=\"text-error\" className=\"popup__form-error\"></span>\n        </>\n      }\n    />\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction EditAvatarPopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile-image\"\n      title=\"Обновить аватар\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonText=\"Сохранить\"\n      children={\n        <>\n          <input\n            id=\"profile-image\"\n            className=\"popup__form-item popup__form-item_el_profile-image\"\n            type=\"url\"\n            name=\"profile-image\"\n            defaultValue=\"\"\n            placeholder=\"Ссылка на картинку\"\n            required\n            ref={avatarRef}\n          />\n          <span id=\"profile-image-error\" className=\"popup__form-error\"></span>\n        </>\n      }\n    />\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction AddPlacePopup(props) {\n    const [cardName, setCardName] = React.useState('');\n    const [cardLink, setCardLink] = React.useState('');\n\n    function handleNameChange(evt) {\n        setCardName(evt.target.value);\n    }\n\n    function handleLinkChange(evt) {\n        setCardLink(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        props.onSendCard({\n            name: cardName,\n            link: cardLink,\n        })\n    }\n\n    return(<PopupWithForm\n        name=\"add-card\"\n        title=\"Новое место\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n        buttonText=\"Создать\"\n        children={\n          <>\n            <input\n              id=\"image__title\"\n              className=\"popup__form-item popup__form-item_el_card-title\"\n              type=\"text\"\n              name=\"image__title\"\n              value={cardName || ''}\n              placeholder=\"Название\"\n              required\n              onChange={handleNameChange}\n            />\n            <span\n              id=\"image__title-error\"\n              className=\"popup__form-error\"\n            ></span>\n            <input\n              id=\"image__link\"\n              className=\"popup__form-item popup__form-item_el_card-image\"\n              type=\"url\"\n              name=\"image__link\"\n              value={cardLink || ''}\n              placeholder=\"Ссылка на картинку\"\n              required\n              onChange={handleLinkChange}\n            />\n            <span id=\"image__link-error\" className=\"popup__form-error\"></span>\n          </>\n        }\n      />)\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport api from \"../utils/api.js\";\nimport \"../index.css\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  api\n  .getInitialCards()\n  .then((res) => {\n    setCards(res);\n  })\n  .catch((err) => console.log(err));\n\nfunction handleCardLike(card) {\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  api\n    .changeLikeCardStatus(card._id, !isLiked)\n    .then((newCard) => {\n      const newCards = cards.map((element) =>\n        element._id === card._id ? newCard : element\n      );\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nfunction handleCardDelete(card) {\n  api\n    .deleteCard(card._id)\n    .then((card) => {\n      const newCards = cards.filter((element) =>\n        element._id !== card._id\n      );\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\n  React.useEffect(() => {\n    api\n      .getUserData()\n      .then((userdata) => {\n        setCurrentUser(userdata);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({ name: card.name, link: card.link });\n  }\n\n  function handleUpdateUser(values) {\n    api\n      .setProfileData(values)\n      .then((userdata) => {\n        setCurrentUser(userdata);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api\n      .setProfileImage(avatar).then((res) => {\n        currentUser.avatar = res.avatar;\n        closeAllPopups();\n      }).catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlacePopupSubmit(values) {\n    api.sendNewCard(values).then((newCard) => {\n      setCards([...cards, newCard]);\n      closeAllPopups();\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  function closeAllPopups() {\n    setSelectedCard(undefined);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n  }\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards = {cards}\n          onCardLike = {handleCardLike}\n          onCardDelete = {handleCardDelete}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup isOpen = {isAddPlacePopupOpen} onClose = {closeAllPopups} onSendCard = {handleAddPlacePopupSubmit} />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}